{"version":3,"sources":["src/components/screens/athletes/AthleteCreateScreen/AthleteCreateScreen.tsx","src/components/navigation/NavPanel.tsx","src/components/navigation/NavButton.tsx","src/components/app/AppFooter.tsx","src/components/screens/Screen.tsx","src/components/screens/Home/Home.tsx","src/components/screens/athletes/AthleteListScreen/AthleteCreateButton.tsx","src/components/screens/athletes/AthleteListCard/AthleteListCard.tsx","src/components/screens/athletes/AthleteListScreen/AthleteListScreen.tsx","src/models/Athlete.ts","src/components/screens/athletes/AthleteDetailsScreen/AthleteDetailsScreen.tsx","src/components/screens/Planning.tsx","src/components/screens/References.tsx","src/App.js","src/index.js"],"names":["athleteAction","styles","StyleSheet","create","nav","margin","flexDirection","justifyContent","NavPanel","props","View","style","children","navButton","NavButton","Pressable","onPress","navigation","navigate","title","Text","AppFooter","year","Date","getFullYear","padding","alignItems","backgroundColor","color","fontSize","fontWeight","content","flex","Screen","text","Home","createButtonContainer","marginVertical","createButton","width","toLowerCase","borderRadius","buttonText","AthleteCreateButton","useNavigation","dispatch","CommonActions","name","itemCard","height","itemLine1","itemLine2","AthleteListCard","item","id","lastName","firstName","params","athleteId","flatList","maxWidth","AthleteListScreen","mockAthleteData","length","FlatList","data","renderItem","keyExtractor","Athlete","args","this","undefined","chronologicalAge","trainingAge","phone","email","Error","newId","trim","newLastName","newFirstName","newAge","newPhone","newEmail","screenActionsView","button","textAlign","input","borderColor","borderWidth","initialState","r","athlete","action","type","setLastName","value","setFirstName","setPhone","setEmail","console","table","AthleteCreateScreen","React","useReducer","TextInput","placeholder","onChangeText","clearTextOnFocus","keyboardType","textContentType","AthleteDetailsScreen","useState","canEdit","setCanEdit","find","a","route","onFocus","e","editable","Planning","References","Stack","createNativeStackNavigator","registerRootComponent","NavigationContainer","Navigator","component","StatusBar"],"mappings":"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","file":"static/js/app.ed6c9cb8.chunk.js","sourcesContent":["import React from 'react';\nimport { useNavigation, CommonActions } from '@react-navigation/native';\nimport { Pressable, Text, TextInput, StyleSheet, View } from 'react-native';\nimport { Athlete } from '../../../../models/Athlete';\nimport { Screen } from '../../Screen';\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  screenActionsView : {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    margin: 4,\n    padding: 8,\n    width: 96,\n    borderRadius: 4,\n    backgroundColor: 'lightblue',\n    textAlign: 'center',\n    color: 'white',\n  },\n  input: {\n    width: 160,\n    margin: 2,\n    padding: 8,\n    borderColor: \"gray\",\n    borderRadius: 4,\n    borderWidth: 1,\n  }\n});\n\nenum athleteAction {\n  setLastName,\n  setFirstName,\n  setPhone,\n  setEmail,\n};\n\ntype actions = {\n  type: athleteAction,\n  value: string,\n};\n\nconst initialState = new Athlete({\n  lastName: 'Smith',\n  firstName: 'John',\n  phone: '123-456-7890',\n  email: 'john@athlete.com',\n  chronologicalAge: 16,\n  trainingAge: 3,\n});\n\nconst r = (athlete: Athlete, action: actions ): Athlete => {\n  switch (action.type) {\n    case athleteAction.setLastName:\n      athlete.lastName = action.value;\n      break;\n    case athleteAction.setFirstName:\n      athlete.firstName = action.value;\n      break;\n    case athleteAction.setPhone:\n      athlete.phone = action.value;\n      break;\n    case athleteAction.setEmail:\n      athlete.email = action.value;\n      break;\n    default:\n      break;\n  };\n  console.table(athlete);\n  return athlete;\n};\n\nexport const AthleteCreateScreen = () => {\n  const navigation = useNavigation();\n  const [_, dispatch] = React.useReducer(r, initialState);\n\n  const handleClickOk = (): void => {\n    navigation.dispatch(\n      CommonActions.navigate({\n        name: 'Athletes',\n      })\n    );\n  };\n\n  const handleClickCancel = (): void => {\n    navigation.dispatch(\n      CommonActions.navigate({\n        name: 'Athletes',\n      })\n    );\n  };\n\n  const handleLastNameTextChange = (text: string) => {\n    if (text) dispatch({ type: athleteAction.setLastName, value: text });\n  }\n\n  return (\n    <Screen navigation={navigation}>\n      <Text style={styles.text}>CREATE NEW ATHLETE</Text>\n      <TextInput\n        style={styles.input}\n        placeholder='Last Name'\n        onChangeText={handleLastNameTextChange}\n        clearTextOnFocus\n      />\n      <TextInput\n        style={styles.input}\n        placeholder='First Name'\n        onChangeText={text => dispatch({ type: athleteAction.setFirstName, value: text })}\n        clearTextOnFocus\n      />\n      <TextInput\n        style={styles.input}\n        placeholder='Phone'\n        onChangeText={text => dispatch({ type: athleteAction.setPhone, value: text })}\n        keyboardType='number-pad'\n        clearTextOnFocus\n      />\n      <TextInput\n        style={styles.input}\n        placeholder='Email'\n        textContentType='emailAddress'\n        onChangeText={text => dispatch({ type: athleteAction.setEmail, value: text })}\n        keyboardType='email-address'\n        clearTextOnFocus\n      />\n      <View style={styles.screenActionsView}>\n        <Pressable style={[styles.button, { backgroundColor: 'darkgreen' }]} onPress={handleClickOk}>\n          <Text style={{ color: 'white' }}>OK</Text>\n        </Pressable>\n        <Pressable style={[styles.button, { backgroundColor: 'crimson' }]} onPress={handleClickCancel}>\n          <Text style={{ color: 'white' }}>CANCEL</Text>\n        </Pressable>\n      </View>\n    </Screen>\n  );\n};\n","import { ReactNode } from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\n\ntype Props = {\n  children: ReactNode,\n};\n\nconst styles = StyleSheet.create({\n  nav: {\n    margin: 4,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n});\n\nexport const NavPanel = (props: Props): JSX.Element => (\n  <View style={styles.nav}>\n    { props.children }\n  </View>\n)\n","import { ReactNode } from 'react';\nimport { Pressable, View, StyleSheet, Text } from 'react-native';\n\n\ntype Props = {\n  title?: string,\n  navigation: any,\n};\n\nconst styles = StyleSheet.create({\n  navButton: {\n    margin: 4,\n  },\n});\n\nexport const NavButton = (props: Props): JSX.Element => {\n  const handlePress = () => {\n    props.navigation.navigate(props.title);\n  };\n\n  return (\n    <Pressable style={styles.navButton} onPress={handlePress}>\n      <Text>{props.title}</Text>\n    </Pressable>\n  );\n}\n","import { View, Text } from \"react-native\";\n\nexport const AppFooter = () => {\n  const year = new Date().getFullYear();\n\n  return (\n  <View style={{padding: 24, alignItems: 'center', backgroundColor: 'slategrey'}}>\n    <Text style={{ color: 'gainsboro', fontSize: 16, fontWeight: 'bold' }}>\n      {`\\u00A9${year}`}\n    </Text>\n  </View>\n  );\n};\n","import { ReactNode } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { NavPanel, NavButton } from '../navigation';\nimport { AppFooter } from '../app/AppFooter';\n\ntype Props = {\n  children: ReactNode,\n  navigation: any,\n};\n\nconst styles = StyleSheet.create({\n  content: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport const Screen = (props: Props): JSX.Element => (\n  <>\n    <NavPanel>\n      <NavButton title='Home' navigation={props.navigation} />\n      <NavButton title='Athletes' navigation={props.navigation}/>\n      <NavButton title='Planning' navigation={props.navigation}/>\n      <NavButton title='References' navigation={props.navigation}/>\n    </NavPanel>\n    <View style={styles.content}>\n      { props.children }\n    </View>\n    <AppFooter />\n  </>\n);\n","import { Text, StyleSheet } from 'react-native';\nimport { Screen } from '../Screen';\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  }\n});\n\nexport const Home = (props: { navigation: any }) => (\n  <Screen navigation={props.navigation}>\n    <Text style={styles.text}>HOME CONTENT</Text>\n  </Screen>\n);\n","import { Pressable, Text, StyleSheet, View } from 'react-native';\nimport { useNavigation, CommonActions } from '@react-navigation/native';\n\ntype Props = {\n  destinationScreen?: string,\n};\n\nconst styles = StyleSheet.create({\n  createButtonContainer: {\n    padding: 8,\n    marginVertical: 12,\n  },\n  createButton: {\n    width: 192,\n    padding: 8,\n    marginVertical: 12,\n    backgroundColor: 'mediumseagreen'.toLowerCase(),\n    borderRadius: 4,\n  },\n  buttonText: {\n    color: 'green',\n  }\n});\n\nexport const AthleteCreateButton = (props: Props) => {\n  const navigation = useNavigation();\n\n  const handlePress = (): void => {\n    navigation.dispatch(\n      CommonActions.navigate({\n        name: 'AthleteCreate',\n      })\n    );\n  };\n\n  return (\n    <Pressable onPress={handlePress} style={styles.createButton}>\n      <Text style={styles.buttonText}>Create New Athlete Card</Text>\n    </Pressable>\n  );\n};\n","import { Pressable, Text, StyleSheet } from 'react-native';\nimport { useNavigation, CommonActions } from '@react-navigation/native';\n\ntype Athlete = {\n  id: string,\n  lastName: string,\n  firstName: string,\n};\n\ntype ItemProps = {\n  item: Athlete,\n};\n\nconst styles = StyleSheet.create({\n  itemCard: {\n    marginVertical: 4,\n    padding: 8,\n    height: 64,\n    width: '100%',\n    backgroundColor: '#DBDFE3',\n  },\n  itemLine1 : {\n    marginVertical: 2,\n    fontSize: 18\n  },\n  itemLine2: {\n    marginVertical: 2,\n    fontSize: 10\n  }\n});\n\nexport const AthleteListCard = (props: ItemProps) => {\n  const navigation = useNavigation();\n  const { id, lastName,  firstName } = props.item;\n  \n  const handlePress = () => {\n    navigation.dispatch(CommonActions.navigate({\n      name: 'AthleteDetails',\n      params: { athleteId: id },\n    }));\n  };\n\n  return (\n    <Pressable style={styles.itemCard} onPress={handlePress}>\n      <Text style={styles.itemLine1}>{`${lastName}, ${firstName}`}</Text>\n      <Text style={styles.itemLine2}>{id}</Text>\n    </Pressable>\n  );\n};\n","import React from 'react';\nimport { FlatList, Text, StyleSheet } from 'react-native';\nimport { Screen } from '../../Screen';\nimport { AthleteCreateButton } from './AthleteCreateButton';\nimport { AthleteListCard } from '../AthleteListCard/AthleteListCard';\nimport mockAthleteData from '../../../../data/athletes.json';\n\ntype ListProps = {\n  navigation: any,\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  flatList: {\n    width: '100%',\n    maxWidth: 400,\n  },\n});\n\nexport const AthleteListScreen = (props: ListProps) => {\n  const { navigation } = props;\n  const renderItem = ({item}: any) => (<AthleteListCard item={item} />);\n\n  return (\n    <Screen navigation={navigation}>\n      <Text style={styles.text}>ATHLETE CONTENT</Text>\n      <Text>{`Total Athlete Count: ${mockAthleteData.length ?? 0}`}</Text>\n      <AthleteCreateButton />\n      <FlatList\n        data={mockAthleteData}\n        renderItem={renderItem}\n        keyExtractor={item => item.id}\n        style={styles.flatList} />\n    </Screen>\n  );\n};\n","type NewAthleteArgs = {\n  id?: string,\n  lastName: string,\n  firstName: string,\n  chronologicalAge?: number,\n  trainingAge?: number,\n  phone?: string,\n  email?: string,\n};\n\nexport class Athlete {\n  #id: string | undefined;\n  #lastName: string;\n  #firstName: string;\n  #chronologicalAge: number;\n  #trainingAge: number;\n  #phone: string;\n  #email: string;\n\n  constructor(args: NewAthleteArgs) {\n    this.#id = args.id || undefined;\n    this.#lastName = args.lastName ?? '';\n    this.#firstName = args.firstName ?? '';\n    this.#chronologicalAge = args.chronologicalAge ?? 0;\n    this.#trainingAge = args.trainingAge ?? 0;\n    this.#phone = args.phone ?? '';\n    this.#email = args.email ?? '';\n\n    if (this.#chronologicalAge < this.#trainingAge)\n      throw new Error('Athlete chronologicalAge must be >= trainingAge');\n  }\n\n  get id() {\n    return this.#id;\n  };\n\n  set id(newId: string | undefined) {\n    if (!newId?.trim()) throw new Error('Athlete ID cannot be null, undefined or empty strings');\n    this.#id = newId.trim() || undefined;\n  };\n\n  get lastName(): string {\n    return this.#lastName;\n  };\n\n  set lastName(newLastName: string) {\n    if (!newLastName.trim()) throw new Error('Athlete lastName cannot be null, undefined or empty strings');\n    this.#lastName = newLastName.trim();\n  };\n  \n  get firstName(): string {\n    return this.#firstName;\n  };\n\n  set firstName(newFirstName: string) {\n    if (!newFirstName.trim()) throw new Error('Athlete firstName cannot be null, undefined or empty strings');\n    this.#firstName = newFirstName.trim();\n  };\n\n  get chronologicalAge(): number {\n    return this.#chronologicalAge;\n  };\n\n  set chronologicalAge(newAge: number) {\n    if (newAge < 1) throw new Error('Athlete chronologicalAge must be >= 1');\n    this.#chronologicalAge = newAge;\n  };\n\n  get trainingAge(): number {\n    return this.#trainingAge;\n  };\n\n  set trainingAge(newAge: number) {\n    if (newAge < 1) throw new Error('Athlete trainingAge must be >= 1');\n    this.#trainingAge = newAge;\n  };\n  get phone(): string {\n    return this.#phone;\n  };\n\n  set phone(newPhone: string) {\n    this.#phone = newPhone.trim();\n  };\n\n  get email(): string {\n    return this.#email;\n  };\n\n  set email(newEmail: string) {\n    this.#email = newEmail.trim();\n  };\n};\n","import React from 'react';\nimport { useNavigation, CommonActions } from '@react-navigation/native';\nimport { Text, TextInput, StyleSheet, View, Pressable, NativeEventEmitter, LayoutChangeEvent, NativeSyntheticEvent, TextInputFocusEventData } from 'react-native';\nimport { Screen } from '../../Screen';\nimport data from '../../../../data/athletes.json';\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  screenActionsView : {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    margin: 4,\n    padding: 4,\n    width: 144,\n    backgroundColor: 'gainsboro',\n  }\n  ,\n  button: {\n    margin: 4,\n    padding: 8,\n    width: 96,\n    borderRadius: 4,\n    backgroundColor: 'lightblue',\n    textAlign: 'center',\n    color: 'white',\n  }\n});\n\nexport const AthleteDetailsScreen = (props: { navigation: any, route: any }) => {\n  const navigation = useNavigation();\n  const [canEdit, setCanEdit] = React.useState<boolean>(false);\n\n  const athlete = data.find(a => a.id === props.route.params.athleteId);\n\n  const handleFocus = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    if (canEdit) return;\n  };\n\n  const handleClickOk = (): void => {\n    navigation.dispatch(\n      CommonActions.navigate({\n        name: 'Athletes',\n      })\n    );\n  };\n\n  const handleClickCancel = (): void => {\n    navigation.dispatch(\n      CommonActions.navigate({\n        name: 'Athletes',\n      })\n    );\n  };\n\n  const handleEditStateToggle = () => {\n    setCanEdit(!canEdit);\n  };\n\n  return (\n    <Screen navigation={props.navigation}>\n      <Text style={styles.text}>ATHLETE DETAILS</Text>\n      <TextInput value={athlete?.lastName} style={styles.input} onFocus={handleFocus} editable={canEdit} />\n      <TextInput value={athlete?.firstName} style={styles.input} editable={canEdit} />\n      <View style={styles.screenActionsView}>\n        <Pressable style={[styles.button, { backgroundColor: 'darkgreen' }]} onPress={handleClickOk}>\n          <Text style={{ color: 'white' }}>OK</Text>\n        </Pressable>\n        <Pressable style={[styles.button, { backgroundColor: 'crimson' }]} onPress={handleClickCancel}>\n          <Text style={{ color: 'white' }}>CANCEL</Text>\n        </Pressable>\n      </View>\n      <Pressable onPress={handleEditStateToggle}>\n        <Text>TOGGLE FORM MODE</Text>\n      </Pressable>\n      <Text>{`can edit: ${canEdit}`}</Text>\n    </Screen>\n  );\n};\n","import { Text, StyleSheet } from 'react-native';\nimport { Screen } from './Screen';\n\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  }\n});\n\nexport const Planning = (props: { navigation: any}) => (\n  <Screen navigation={props.navigation}>\n    <Text style={styles.text}>PLANNING CONTENT</Text>\n  </Screen>\n);","import { Text, StyleSheet } from 'react-native';\nimport { Screen } from './Screen';\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  }\n});\n\nexport const References = (props: { navigation: any}) => (\n  <Screen navigation={props.navigation}>\n    <Text style={styles.text}>REFERENCES CONTENT</Text>\n  </Screen>\n);\n","import { StatusBar } from 'expo-status-bar';\n// import { NativeBaseProvider } from \"native-base\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Home, AthleteListScreen, AthleteCreateScreen, Planning, References, AthleteDetailsScreen } from './components/screens';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n  // <NativeBaseProvider>\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name='Home' component={Home} />\n        <Stack.Screen name='Athletes' component={AthleteListScreen} />\n        <Stack.Screen name='AthleteCreate' component={AthleteCreateScreen} />\n        <Stack.Screen name='AthleteDetails' component={AthleteDetailsScreen} />\n        <Stack.Screen name='Planning' component={Planning} />\n        <Stack.Screen name='References' component={References} />\n      </Stack.Navigator>\n      <StatusBar style='auto' />\n    </NavigationContainer>\n  // </NativeBaseProvider>\n  );\n};\n","import { registerRootComponent } from 'expo';\nimport App from './App';\n\nregisterRootComponent(App);\n"],"sourceRoot":""}